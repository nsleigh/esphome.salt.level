substitutions:
  name: esphome-web-6d5ab8
  friendly_name: ESPHome Salt level 6d5ab8

esphome:
  name: ${name}
  friendly_name: ${friendly_name}
  min_version: 2024.6.0
  name_add_mac_suffix: false
  platformio_options:
    board_build.flash_mode: dio
  project:
    name: esphome.saltlevel
    version: 0.0.1

esp32:
  board: esp32-s3-devkitc-1
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:

# Allow Over-The-Air updates
ota:
- platform: esphome

# Allow provisioning Wi-Fi via serial
improv_serial:

wifi:
  # Set up a wifi access point
  ap: {}
  ssid: !secret wifi_ssid
  password: !secret wifi_password

# In combination with the `ap` this allows the user
# to provision wifi credentials to the device via WiFi AP.
captive_portal:

dashboard_import:
  package_import_url: github://esphome/example-configs/esphome-web/esp32.yaml@main
  import_full_config: true

# Sets up Bluetooth LE (Only on ESP32) to allow the user
# to provision wifi credentials to the device.
esp32_improv:
  authorizer: none

# To have a "next url" for improv serial
web_server:

# Configuration entry for ESP32
i2c:
  sda: GPIO2
  scl: GPIO1
  scan: true
  id: bus_a

sensor:
  # Reports the WiFi signal strength/RSSI in dB
  - platform: wifi_signal
    name: "WiFi Stength"
    id: wifi_strength
    update_interval: 60s
    entity_category: "diagnostic"

  # Muliple VL53L0X sensors on same i2c bus
  - platform: vl53l0x
    name: "Left distance"
    id: distance1
    address: 0x41
    enable_pin: GPIO3
    timeout: 200us
    update_interval: 1000ms
    unit_of_measurement: "m"
    filters:
      - calibrate_linear:
         method: least_squares
         datapoints:
          # Map from sensor true value
          - 0.12 -> 0.10
          - 0.32 -> 0.30
          - 0.43 -> 0.40
          - 0.50 -> 0.50
  - platform: vl53l0x
    name: "Right distance"
    id: distance2
    address: 0x42
    enable_pin: GPIO4
    timeout: 200us
    update_interval: 1000ms
    unit_of_measurement: "m"
    filters:
      - calibrate_linear:
         method: least_squares
         datapoints:
          # Map from sensor true value
          - 0.12 -> 0.10
          - 0.32 -> 0.30
          - 0.43 -> 0.40
          - 0.50 -> 0.50

text_sensor:
    # Diagnostic wifi parameters
  - platform: wifi_info
    ip_address:
      name: IP Address
      address_0:
        name: IP Address
    ssid:
      name: Wifi SSID
    bssid:
      name: Wifi BSSID

# deep_sleep:
#   run_duration: 30s
#   sleep_duration: 30s # 10min

